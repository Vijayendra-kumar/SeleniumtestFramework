// Generated by Selenium IDE
package test;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.fail;

import java.time.Duration;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class LoginSuccessTest {
  private WebDriver driver;
 // private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();
 // private JavascriptExecutor js;

  @BeforeClass(alwaysRun = true)
  public void setUp() throws Exception {
 //   System.setProperty("webdriver.chrome.driver", "");
    driver = new ChromeDriver();
   // baseUrl = "\"https://dev.elitev5.com/";
  //  driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(50));
  //  js = (JavascriptExecutor) driver;
  }

  @Test
  public void testLoging() throws Exception {
    driver.get("https://dev.elitev5.com/#/login");
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(50));
    driver.findElement(By.xpath("//input[@id='lngtxtfld']")).clear();
    driver.findElement(By.xpath("//input[@id='lngtxtfld']")).sendKeys("ANJU");
    driver.findElement(By.xpath("//input[@id='lngpwdfld']")).clear();
    driver.findElement(By.xpath("//input[@id='lngpwdfld']")).sendKeys("anju");
    driver.findElement(By.xpath("//input[@id='lngtxtfld']")).click();
    driver.findElement(By.xpath("//button[@id='lngsngbtn']/span")).click();
    driver.get("https://dev.elitev5.com/#/OIINAMES");
    driver.findElement(By.xpath("//body[@id='s4MainBody']/app-root/app-home/mat-toolbar/div")).click();
    try {
      assertEquals(driver.findElement(By.xpath("//body[@id='s4MainBody']/app-root/app-home/mat-toolbar/div/div/div/div[3]/h1")).getText(), "V5 BASELINE DEV PROJECT");
    } catch (Error e) {
      verificationErrors.append(e.toString());
    }
  }

  @AfterClass(alwaysRun = true)
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
